name: Deploy React Application to AWS EKS

#on:
#  push:
#    branches:
#      - dev

env:
  AWS_REGION: 'us-west-2'
  ECR_REGISTRY: '123456789012.dkr.ecr.us-west-2.amazonaws.com'
  IMAGE_NAME: 'react-app'
  KUBERNETES_NAMESPACE: 'react-app'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Set Image Tag
      id: vars
      run: |
        IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)
        echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV

    - name: Build React Application (Optional)
      run: |
        npm install
        npm run build

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push Docker image
      run: |
        docker build -t ${{ env.ECR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
        docker push ${{ env.ECR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

    - name: Install yq
      run: |
        if ! command -v yq &> /dev/null
        then
          echo "yq not found, installing..."
          wget https://github.com/mikefarah/yq/releases/download/v4.30.6/yq_linux_amd64 -O /usr/local/bin/yq
          chmod +x /usr/local/bin/yq
        else
          echo "yq is already installed."
        fi

    - name: Update Helm Values
      run: |
        yq eval ".image.tag = \"${{ env.IMAGE_TAG }}\"" -i helm/react-app/values.yaml
        cat helm/react-app/values.yaml

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Deploy to Kubernetes
      run: |
        helm upgrade --install react-app-stable helm/react-app \
          --namespace ${{ env.KUBERNETES_NAMESPACE }} \
          --create-namespace \
          --set release=stable
        helm upgrade --install react-app-canary helm/react-app \
          --namespace ${{ env.KUBERNETES_NAMESPACE }} \
          --set release=canary \
          --set image.tag=${{ env.IMAGE_TAG }}

    - name: Clean up Docker images
      run: |
        docker rmi ${{ env.ECR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} || true
        docker system prune -f || true