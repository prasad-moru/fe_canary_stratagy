name: CI/CD Pipeline for React App
disabled: true

#on:
#  push:
#    branches: [ dev ] # Adjust to your branch name

env:
  GCP_PROJECT_ID: eternal-arcana-222507
  IMAGE_NAME: react-app
  GCR_REGISTRY: gcr.io
  KUBERNETES_NAMESPACE: react-app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set image tag
      id: set-tag
      run: |
        # Pad build number with leading zeros
        BUILD_NUM=$(printf "%03d" $GITHUB_RUN_NUMBER)
        echo "IMAGE_TAG=$BUILD_NUM" >> $GITHUB_ENV
        echo "Set IMAGE_TAG to $BUILD_NUM"

    - name: Build React (Optional)
      run: |
        npm install
        npm run build

    - name: Docker Build
      run: |
        echo "Building Docker image with tag: ${{ env.IMAGE_TAG }}"
        docker build -t ${{ env.GCR_REGISTRY }}/${{ env.GCP_PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .

    - name: Docker Login & Push to GCR
      uses: docker/login-action@v3
      with:
        registry: ${{ env.GCR_REGISTRY }}
        username: _json_key
        password: ${{ secrets.GCR_SERVICE_ACCOUNT_KEY }}

    - name: Push to GCR
      run: |
        docker push ${{ env.GCR_REGISTRY }}/${{ env.GCP_PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

    - name: Install yq
      run: |
        if ! command -v yq &> /dev/null
        then
            echo "yq not found, installing..."
            wget https://github.com/mikefarah/yq/releases/download/v4.30.6/yq_linux_amd64 -O /usr/local/bin/yq
            chmod +x /usr/local/bin/yq
        else
            echo "yq is already installed."
        fi

    - name: Update Helm Values
      run: |
        yq eval '.image.tag = "${{ env.IMAGE_TAG }}"' -i helm/react-app/values.yaml
        cat helm/react-app/values.yaml

        git config user.email "actions@github.com"
        git config user.name "GitHub Actions"
        
        git add helm/react-app/values.yaml
        git commit -m "Update image tag to ${{ env.IMAGE_TAG }}"
        
        # Push changes back to the repository
        git push https://${{ secrets.GIT_USERNAME }}:${{ secrets.GIT_TOKEN }}@github.com/$GITHUB_REPOSITORY.git HEAD:$GITHUB_REF_NAME

    - name: Setup gcloud and kubectl
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCR_SERVICE_ACCOUNT_KEY }}
        export_default_credentials: true

    - name: Deploy to Kubernetes
      run: |
        gcloud container clusters get-credentials YOUR_CLUSTER_NAME --region YOUR_REGION --project ${{ env.GCP_PROJECT_ID }}
        
        # Deploy stable release
        helm upgrade --install react-app-stable helm/react-app \
            --namespace ${{ env.KUBERNETES_NAMESPACE }} \
            --create-namespace \
            --set release=stable

        # Deploy canary release
        helm upgrade --install react-app-canary helm/react-app \
            --namespace ${{ env.KUBERNETES_NAMESPACE }} \
            --set release=canary \
            --set image.tag=${{ env.IMAGE_TAG }}

    - name: Clean Up
      run: |
        docker rmi ${{ env.GCR_REGISTRY }}/${{ env.GCP_PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} || true
        docker system prune -f || true