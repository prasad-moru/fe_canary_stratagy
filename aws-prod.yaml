name: AWS Prod Deployment

on:
  push:
    branches: [main]
  release:
    types: [published]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: react-app
  EKS_CLUSTER: prod-cluster
  K8S_NAMESPACE: react-app
  ENVIRONMENT: production

jobs:
  build-test:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Set image tag
      id: set-tag
      run: |
        TAG="v$(date +%Y.%m.%d)-${GITHUB_RUN_NUMBER}"
        echo "IMAGE_TAG=$TAG" >> $GITHUB_ENV

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm test

    - name: Security scan
      uses: shiftleftsecurity/scan-action@v2
      with:
        output: reports/

    - name: Build
      run: npm run build

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Create release artifact
      uses: softprops/action-gh-release@v1
      if: github.ref == 'refs/heads/main'
      with:
        tag_name: ${{ env.IMAGE_TAG }}
        name: Release ${{ env.IMAGE_TAG }}
        body: Production release ${{ env.IMAGE_TAG }}
        draft: false
        prerelease: false

  deploy-prod:
    needs: build-test
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      
    # Add environment protection for manual approval
    environment: 
      name: production
      url: https://your-production-url.com

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Configure kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig \
          --region $AWS_REGION \
          --name $EKS_CLUSTER

    - name: Deploy to EKS (Stable)
      run: |
        helm upgrade --install react-app-stable helm/react-app \
          --namespace $K8S_NAMESPACE \
          --create-namespace \
          --set image.tag=$IMAGE_TAG \
          --set release=stable \
          --set environment=$ENVIRONMENT \
          --atomic \
          --timeout 5m

    - name: Run integration tests
      run: |
        # Add your integration test commands here
        echo "Running integration tests against production deployment..."